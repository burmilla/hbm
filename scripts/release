#!/usr/bin/env bash
set -e

GITHUB_USER="kassisol"
REPO_NAME="hbm"

function upload_file() {
	local directory=$1

	for file in $(ls ${directory}/ | grep -vE "^image$"); do
		./.github-release upload --user "${GITHUB_USER}" --repo "${REPO_NAME}" --tag "${VERSION}" --file "${directory}/${file}" --name "${file}"
	done
}

function get-tag-message() {
	git --no-pager show -s --format=%B ${VERSION} | sed 's/*/<STAR>/' | while read line; do
		if [ $(echo $line | grep -Ec "Release|<STAR>") -eq 1 ]; then
			if [ $(echo $line | grep -Ec "^Release") -eq 1 ]; then
				echo -e "${line}\n"
			else
				echo $line | sed 's/<STAR>/    \*/'
			fi
		fi
	done
}

source $(dirname $0)/version

if [ -n "$DIRTY" ]; then
	echo "Not releasing dirty version"
	exit 1
fi

VERSION_OK=$(echo ${VERSION} | grep -Ec "^[0-9]+\.[0-9]+\.[0-9]+$")
if [ $VERSION_OK -eq 0 ]; then
	echo "Cannot release the version ${VERSION}"
	exit 100
fi

./.github-release release --user "${GITHUB_USER}" --repo "${REPO_NAME}" --tag "${VERSION}" --description "$(get-tag-message)" --pre-release --draft

upload_file "bin"
upload_file "dist"

if [ -f "dist/image" ]; then
	docker image push $(cat dist/image)
fi
